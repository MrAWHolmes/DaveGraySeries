REF1: linking a stylesheet
https://www.w3schools.com/html/html_css.asp

Setup in folder 007NN7B

playgound.html - file we will view
styles.css - the css stylesheet

Initial Styling:

styles.css
ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  border: 1px dotted red;
  
}

li {
  border: 1px solid black;
  margin: 0.5em;
  padding: 0.5em;
}


html: playground.html
<html>
  <head>
    <title>Flexbox css in 15 mins</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
    <h1>Heading 1</h1>
    <h2>Heading 2</h2>
    <h3>Heading 3</h3>
    <hr />
    <h1>UL tags...</h1>
    <ul>
      <li>one</li>
      <li>two</li>
      <li>three</li>
      <li>four</li>
      <li>five</li>
    </ul>
  </body>
</html>

================================
Effect:

+----------------------------------------------------+
| +------------------------------------------------+ |
| | one                                            | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | two                                            | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | three                                          | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | four                                           | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | five                                           | |
| +------------------------------------------------+ |
+----------------------------------------------------+

========================================================
Adding display : flex; to ul in styles.css

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  border: 1px dotted red;
  display: flex;  
}

Effect: Default flex is on rows...
+----------------------------------------------------+
| +-----+ +-----+ +-------+ +------+ +------+        |
| | one | | two | | three | | four | | five |        |  
| +-----+ +-----+ +-------+ +------+ +------+        |
+----------------------------------------------------+

To change direction to Column:
add flex-direction: column;

and we are back to blocks
Effect:

+----------------------------------------------------+
| +------------------------------------------------+ |
| | one                                            | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | two                                            | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | three                                          | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | four                                           | |
| +------------------------------------------------+ |
| +------------------------------------------------+ |
| | five                                           | |
| +------------------------------------------------+ |
+----------------------------------------------------+

We can go back to row, but reverse them with
flex-direction : row-reverse;
Effect: row based with placement right to left
+----------------------------------------------------+
|        +------+ +------+ +-------+ +-----+ +-----+ |
|        | five | | four | | three | | tow | | one | |   
|        +------+ +------+ +-------+ +-----+ +-----+ |
+----------------------------------------------------+

We can control wrapping with 
flex-wpap: nowrap (default)

flex-wpap: wrap-reverse


Horizontal placement with justify-content
We can also use justify-conent to control horizonatal placement:

justify-content : flex-start; (default) left align

justify-content : flex-end; (right-justify .. but not flipped)

justify-conent : center

Vertical Justification with align-items:

align-items : center;

align-items : flex-end; (top just)

align-items : flex-start; (bottom just)

align-items : stretch; (default)

CSS THUS FAR:
ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  border: 1px dotted red;
  height: 200px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
     
}

li {
  border: 1px solid black;
  margin: 0.5em;
  padding: 0.5em;
}


Better than justift-conentent: center
is space-between or space-around or space-evenly

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  border: 1px dotted red;
  height: 200px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-content: center;
}


We can create some classes to mess with the order...

.flex1 {
  order: 1;
  border: 3px dotter red;
}

and add some class to some <LI>..


HTML: BODY BECOMES:
<body>
<h1>Heading 1</h1>
<h2>Heading 2</h2>
<h3>Heading 3</h3>
<hr />
<h1>UL tags...</h1>
<ul>
  <li class="flex1">one</li>
  <li class="flex1">two</li>
  <li>three</li>
  <li>four</li>
  <li>five</li>
</ul>
</body>


But we should use the class on all so this becomes:
    <ul>
      <li class="flex1">one</li>
      <li class="flex1">two</li>
      <li class="flex1">three</li>
      <li class="flex1">four</li>
      <li class="flex1">five</li>
    </ul>


Now .css adding order 2 class:

.flex2 {
  order: 2;
  border: 3px dotted blue;
}

and alter some of the classes in LI
   <ul>
      <li class="flex2">one</li>
      <li class="flex1">two</li>
      <li class="flex2">three</li>
      <li class="flex1">four</li>
      <li class="flex1">five</li>
    </ul>


Now we can assign each class a % size with the flex-basis 
property

Thus:

.flex1 {
  order: 1;
  flex-basis: 25%;
  border: 3px dotted red;
}


But better is

flex: <shrink rate> <grow rate> <start value>

e.g.


.flex1 {
  order: 1;
  flex: 1 1 10em;
  border: 3px dotted red;
}

.flex2 {
  order: 2;
  flex: 2 2 10em;
  border: 3px solid blue;
}


















